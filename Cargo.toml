[workspace]
members = ["examples/*", "kiso"]
resolver = "2"

[workspace.dependencies]
kiso.path = "kiso"

backoff = "0.4.0"
backtrace = "0.3.73"
bytes = "1.6.1"
clap = { version = "4.5.9", features = ["derive", "string"] }
flume = "0.11.0"
futures-util = "0.3.30"
hickory-resolver = "0.24.1"
http-body = "1.0.1"
http-body-util = "0.1.2"
hyper = { version = "1.4.1", features = ["client", "server", "http2"] }
hyper-util = { version = "0.1.6", features = ["client", "server", "http2", "tokio"] }
num_cpus = "1.16.0"
once_cell = { version = "1.19.0", default-features = false, features = ["parking_lot", "alloc", "std"] }
opentelemetry = "0.24.0"
opentelemetry_sdk = { version = "0.24.1", features = ["rt-tokio"] }
opentelemetry-semantic-conventions = "0.16.0"
parking_lot = "0.12.3"
rustls = "0.23.11"
rustls-native-certs = "0.7.1"
serde = "1.0.204"
serde_json = "1.0.120"
signal-hook = "0.3.17"
socket2 = { version = "0.5.7", features = ["all"] }
tokio-rustls = "0.26.0"
tokio-util = { version = "0.7.11", features = ["rt"] }
tonic-build = "0.12.1"
tonic-health = { version = "0.12.1", default-features = false }
tracing = "0.1.40"
tracing-log = { version = "0.2.0", features = ["interest-cache"] }

[workspace.dependencies.axum]
version = "0.7.5"
default-features = false
features = ["matched-path", "tokio"]

[workspace.dependencies.nix]
version = "0.29.0"
features = ["pthread", "sched", "time"]

[workspace.dependencies.tokio]
version = "1.38.1"
default-features = false
features = ["full"]

[workspace.dependencies.tonic]
version = "0.12.1"
default-features = false
features = ["codegen", "prost", "gzip", "zstd", "transport", "tls-roots"]

[workspace.dependencies.tower]
version = "0.4.13"
default-features = false
features = ["limit"]

[workspace.dependencies.tower-http]
version = "0.5.2"
features = [
  "sensitive-headers",
  "compression-gzip",
  "compression-zstd",
  "decompression-gzip",
  "decompression-zstd",
  "timeout",
]

[workspace.dependencies.tracing-subscriber]
version = "0.3.18"
default-features = false
features = ["env-filter", "json", "smallvec", "parking_lot", "time", "registry", "ansi"]

[workspace.lints.rust]
rust_2018_idioms = "deny"

let_underscore_drop = "warn"
unused_imports = "warn"
variant_size_differences = "warn"

[workspace.lints.clippy]
# Allows
use_self = "allow"
diverging_sub_expression = "allow"

# Denies
extra_unused_lifetimes = "deny"
mod_module_files = "deny"

# Warns
checked_conversions = "warn"
cloned_instead_of_copied = "warn"
cognitive_complexity = "warn"
dbg_macro = "warn"
decimal_literal_representation = "warn"
empty_enum = "warn"
enum_glob_use = "warn"
equatable_if_let = "warn"
explicit_deref_methods = "warn"
explicit_into_iter_loop = "warn"
explicit_iter_loop = "warn"
filter_map_next = "warn"
fn_params_excessive_bools = "warn"
if_not_else = "warn"
implicit_clone = "warn"
implicit_saturating_sub = "warn"
imprecise_flops = "warn"
index_refutable_slice = "warn"
items_after_statements = "warn"
large_types_passed_by_value = "warn"
let_unit_value = "warn"
manual_filter_map = "warn"
manual_find_map = "warn"
manual_let_else = "warn"
manual_ok_or = "warn"
manual_unwrap_or = "warn"
map_flatten = "warn"
map_unwrap_or = "warn"
match_same_arms = "warn"
missing_errors_doc = "warn"
mut_mut = "warn"
needless_continue = "warn"
needless_pass_by_value = "warn"
ref_option_ref = "warn"
result_large_err = "warn"
single_match_else = "warn"
suspicious_operation_groupings = "warn"
type_repetition_in_bounds = "warn"
unnecessary_sort_by = "warn"
unnecessary_wraps = "warn"
useless_format = "warn"

[profile.dev]
debug = 1
